type User {
  _id: ID!,
  firstName: String!
  lastName: String!
  email: String!
  skills: String
  mobileNo: String
  avtaar: String
  team: Team
  createdAt: String
}
type Query {
  users: [User!]!
}
type Usererror{
  name: String,
  message: String
}

input UserInput{
  firstName: String!
  password: String!
  lastName: String!
  email: String!
  skills: String
  mobileNo: String
  avtaar: String
  team: ID!
}
type UserPayload{
  error: [Usererror],
  user: User
}

input loginInput{
  email: String!,
  password: String!
}
type LoginPayload{
  user:User,
  token: String!,
  error: [Usererror]
}
type Mutation{
  createUser(input:UserInput): UserPayload
  login(input:loginInput): LoginPayload 
}

